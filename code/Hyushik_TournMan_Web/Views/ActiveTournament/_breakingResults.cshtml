@model Hyushik_TournMan_Web.Classes.ViewModels.BreakingScoreListingViewModel

@helper FormForStations(Hyushik_TournMan_Common.Models.Station station){
    
        if (Roles.IsUserInRole(Hyushik_TournMan_Common.Constants.Constants.Roles.JUDGE_ROLE))
        {
            using (Html.BeginForm("UpdateStationAttempts", "Scoring", FormMethod.Post))
            {
                @Html.Hidden("stationId", station.Id)
                @Html.Hidden("tournId", Model.TournamentId)
                @Html.TextBox("attempts", station.Attempts, new {@type="number", @min="0", @max="10"})
                
                <label>
                    <span>No break:</span>
                    @Html.CheckBox("didNotBreak", station.DidNotBreak)
                </label>                
                <button type="submit" class="btn btn-default btn-sm">Update</button>
            }
        }
        else { 
            @station.Attempts
        }
}

<div>
    <h2>Breaking</h2>
    <table class="table table-striped table-bordered table-hover">
        <thead>
            <tr>
                <th>Name</th>
                <th>Score</th>
                <th>Stations</th>
                <th>Attempts</th>
                @if (Roles.IsUserInRole(Hyushik_TournMan_Common.Constants.Constants.Roles.JUDGE_ROLE)){<th>Add Weight to Score</th>}
                @if (Roles.IsUserInRole(Hyushik_TournMan_Common.Constants.Constants.Roles.ADMINISTRATOR_ROLE)){<th>Judge Scores</th>}
                @if (Roles.IsUserInRole(Hyushik_TournMan_Common.Constants.Constants.Roles.JUDGE_ROLE)){<th>Delete Entry</th>}
            </tr>
        </thead>
        <tbody>
            @foreach(var listing in Model.BreakingScoreListings.OrderByDescending(bsl=>bsl.CurrentScore)){
                <tr>
                    <td>@listing.ParticipantName</td>
                    <td>@listing.CurrentScore.ToString("F2")</td>
                    <td>@if (listing.Stations.Count > 0)
                        {
                            <span>@listing.Stations.First().Technique.Name</span>
                        }
                    </td>
                    <td>
                        @if (listing.Stations.Count > 0){
                            @FormForStations(listing.Stations.First())
                        }
                    </td>

                    @if (Roles.IsUserInRole(Hyushik_TournMan_Common.Constants.Constants.Roles.JUDGE_ROLE)){
                        <td>@Html.ActionLink("Judge", "JudgeBreakingEntry", "Scoring", new { entryId=listing.BreakingEntryId}, null)</td>
                    }


                    @if (Roles.IsUserInRole(Hyushik_TournMan_Common.Constants.Constants.Roles.ADMINISTRATOR_ROLE)){
                        <td>
                            @if (listing.JudgeIdToScore.Keys.Count<1)
                            {
                                <div>No current scores</div>
                            }
                            @foreach(var judgeId in listing.JudgeIdToScore.Keys){//using thius one as it is slightly more likely to not error from bad data
                                <div>@listing.JudgeIdToName[judgeId]: @listing.JudgeIdToScore[judgeId].ToString()</div>
                            }
                                
                        </td>
                    }
                        
                        
                    @if (Roles.IsUserInRole(Hyushik_TournMan_Common.Constants.Constants.Roles.JUDGE_ROLE)){
                        <td>
                            @using (Html.BeginForm("DeleteBreakingEntry", "Scoring", FormMethod.Post))
                            {
                                <input name="tournId" type="hidden" value="@Model.TournamentId"/>
                                <input name="entryId" type="hidden" value="@listing.BreakingEntryId"/>
                                <button type="submit" class="btn btn-danger disabled glyphicon glyphicon-remove"> </button>
                            }
                        </td>
                    }
                    
                </tr>
                var NewRowCount = listing.Stations.Count;
                for(int row=1; row < NewRowCount; row++){
                    <tr>
                        <td></td>
                        <td></td>
                        <td>
                            @if (listing.Stations.Count > row)
                            {
                                <span>@listing.Stations.ElementAt(row).Technique.Name</span>
                            }
                        </td>
                        <td>
                            @FormForStations(listing.Stations.ElementAt(row))
                        </td>
                        @if (Roles.IsUserInRole(Hyushik_TournMan_Common.Constants.Constants.Roles.JUDGE_ROLE)){<td></td>}
                        @if (Roles.IsUserInRole(Hyushik_TournMan_Common.Constants.Constants.Roles.ADMINISTRATOR_ROLE)){
                            <td>

                            </td>
                        }
                        @if (Roles.IsUserInRole(Hyushik_TournMan_Common.Constants.Constants.Roles.JUDGE_ROLE)){<td></td>}
                        <td></td>
                    </tr>
                }
              }
          </tbody>
    </table>
    
    @if (Roles.IsUserInRole(Hyushik_TournMan_Common.Constants.Constants.Roles.JUDGE_ROLE)) {
        <div>
            @Html.ActionLink("Add New", "CreateBreakingEntry", "Scoring", new { tournId = Model.TournamentId }, new { @class = "btn btn-primary btn-sm" })
        </div>
    }

</div>