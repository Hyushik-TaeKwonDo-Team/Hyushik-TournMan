@model Hyushik_TournMan_Web.Classes.ViewModels.BreakingScoreListingViewModel

<script>
    function validate() {
        if (window.confirm("Are you sure that you want to delete this participant's break?")) {
            return true;
        }
        else {
            return false;
        }
    }

    $(document).ready(function () {
        /* Toggles [secondclass]-toggleChild */
        $('.toggleParent').click(function () {
            var name = "." + $(this).attr('class').split(' ')[1] + "-toggleChild";
            $(name).toggle();
            $(this).closest('tr').toggleClass("active");
            $(this).find(".glyphicon").toggleClass("glyphicon-minus").toggleClass("glyphicon-plus");
        });
    });
</script>

@{var UserCanSeeNonPublic = Roles.IsUserInRole(Hyushik_TournMan_Common.Constants.Constants.Roles.JUDGE_ROLE)
        || Roles.IsUserInRole(Hyushik_TournMan_Common.Constants.Constants.Roles.ADMINISTRATOR_ROLE);}

<div>
    <h2>Breaking</h2>
    @if (Roles.IsUserInRole(Hyushik_TournMan_Common.Constants.Constants.Roles.JUDGE_ROLE))
    {
        using (Html.BeginForm("SetBreakingPublic", "Ring", FormMethod.Post))
        {
            <input name="ringId" type="hidden" value="@Model.Ring.Id"/>
            if (Model.Ring.BreakingResultsPublic)
            {
                <input name="status" type="hidden" value="false"/>
                <button class="btn btn-default btn-xs">Make Private</button>
            }
            else
            {
                <input name="status" type="hidden" value="true"/>
                <button class="btn btn-default btn-xs">Make Public</button>
            }

        }
    }
    

    @if (Model.BreakingScoreListings.Count > 0 && (Model.Ring.BreakingResultsPublic || UserCanSeeNonPublic))
    {
        <table class="table table-bordered table-hover table-condensed">
            <thead>
                <tr>
                    <th>Name</th>
                    <th>Score</th>
                    <th>
                        Station Details <br/>
                        <span>Station Name</span><span>Attempts</span>
                    </th>
                    @if (Roles.IsUserInRole(Hyushik_TournMan_Common.Constants.Constants.Roles.JUDGE_ROLE))
                    {<th>Add Weight to Score</th>}
                    @if (Roles.IsUserInRole(Hyushik_TournMan_Common.Constants.Constants.Roles.ADMINISTRATOR_ROLE))
                    {<th>Judge Scores</th>}
                    @if (Roles.IsUserInRole(Hyushik_TournMan_Common.Constants.Constants.Roles.JUDGE_ROLE))
                    {<th>Delete Entry</th>}
                </tr>
               
            </thead>
            <tbody>
                @foreach (var listing in Model.BreakingScoreListings.OrderByDescending(
                    bsl => bsl.CurrentScore
                    ).ThenByDescending(
                    bsl => bsl.JudgeScoreTieBreaker()).ThenByDescending(
                    bsl => bsl.StationCountTiebreaker()))
                {
                    <tr>
                        <td class="toggleParent @listing.BreakingEntryId">
                            <span class="glyphicon glyphicon-plus"></span>
                            @listing.ParticipantName
                        </td>
                        <td class="toggleParent @listing.BreakingEntryId">@listing.CurrentScore.ToString("F2")</td>
                        
                        <td>
                            @if (listing.Stations.Count > 0)
                            {
                                //HERE
                                if (Roles.IsUserInRole(Hyushik_TournMan_Common.Constants.Constants.Roles.JUDGE_ROLE))
                                {
                                    using (Html.BeginForm("UpdateStationAttempts", "Scoring", FormMethod.Post))
                                    {
                                        @Html.Hidden("ringId", Model.Ring.Id)
                                        <table>
                                            <thead>
                                                
                                            </thead>
                                            <tbody>
                                                @foreach (var station in listing.Stations) {
                                                    <tr>
                                                        <td>
                                                            @station.Technique.Name
                                                            @Html.Hidden("stationIds", station.Id)
                                                        </td>
                                                        <td>
                                                            
                                                            <div class="col-md-3">
                                                               @Html.TextBox("attempts", station.Attempts, new { @type = "number", @min = "1", @max = "10", step = "1", @pattern = "\\d+", @required = "true" })
                                                            </div>
                                                            <div class="checkbox col-md-6">
                                                                <label>
                                                                    @Html.CheckBox("broke", !station.DidNotBreak)
                                                                    Successful break
                                                                </label>
                                                            </div>
                                                        <td>
                                                    </tr>
                                                }
                                                <tr>
                                                    <td>
                                                        <div class="col-md-3">          
                                                            <button type="submit" class="btn btn-default btn-sm">Update</button>
                                                        </div>
                                                    </td>
                                                </tr>
                                            <tbody>
                                        </table>
                                        
                                        
                                    }
                                }else
                                { 
                                    <table>
                                            <tbody>
                                                @foreach (var station in listing.Stations) {
                                                    <tr>
                                                        <td>
                                                            @station.Technique.Name
                                                        </td>
                                                        <td>
                                                            <div class="col-md-3">
                                                               @station.Attempts
                                                            </div>
                                                            <div class="checkbox col-md-6">
                                                                <label>
                                                                    @Html.CheckBox("broke", !station.DidNotBreak, new { disabled="disabled"})
                                                                    Successful break
                                                                </label>
                                                            </div>
                                                        <td>
                                                    </tr>
                                                }
                                                
                                            <tbody>
                                        </table>
                                }
                            }
                        </td>

                        @if (Roles.IsUserInRole(Hyushik_TournMan_Common.Constants.Constants.Roles.JUDGE_ROLE))
                        {
                            <td>@Html.ActionLink(" Judge", "JudgeBreakingEntry", "Scoring", new { entryId = listing.BreakingEntryId }, new { @class = "btn btn-sm btn-primary glyphicon glyphicon-edit glyphicon" })</td>
                        }


                        @if (Roles.IsUserInRole(Hyushik_TournMan_Common.Constants.Constants.Roles.ADMINISTRATOR_ROLE))
                        {
                            <td>
                                @if (listing.JudgeIdToScore.Keys.Count < 1)
                                {
                                    <div>No current scores</div>
                                }
                                else
                                {
                                    <select class="form-control input-sm">
                                    @foreach (var judgeId in listing.JudgeIdToScore.Keys)
                                    {//using thius one as it is slightly more likely to not error from bad data
                                        <option>@listing.JudgeIdToName[judgeId]: @listing.JudgeIdToScore[judgeId].ToString()</option>
                                    }
                                    </select>
                                }
                            </td>
                        }
                        
                        
                        @if (Roles.IsUserInRole(Hyushik_TournMan_Common.Constants.Constants.Roles.JUDGE_ROLE))
                        {
                            <td style="text-align:center">
                                @using (Html.BeginForm("DeleteBreakingEntry", "Scoring", FormMethod.Post))
                                {
                                    <input name="ringId" type="hidden" value="@Model.Ring.Id"/>
                                    <input name="entryId" type="hidden" value="@listing.BreakingEntryId"/>
                                    <button type="submit" class="btn btn-sm btn-danger glyphicon glyphicon-remove" onClick="return validate();"> </button>
                                }
                            </td>
                        }
                    
                    </tr>
                        }
                }
              </tbody>
        </table>
    }
    else
    {
        <span>No current breaking results</span>
    }



    @if (Roles.IsUserInRole(Hyushik_TournMan_Common.Constants.Constants.Roles.JUDGE_ROLE))
    {
        <div>
            @Html.ActionLink("Add New", "CreateBreakingEntry", "Scoring", new { ringId = Model.Ring.Id }, new { @class = "btn btn-primary btn-sm" })
        </div>
    }

</div>